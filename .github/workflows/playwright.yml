name: Run Playwright Tests on Push

on:
  push:
    branches:
      - main

jobs:
  test:
    runs-on: windows-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: "8.0.x"

      - name: Restore dependencies
        run: dotnet restore

      - name: Build solution
        run: dotnet build --no-restore

      - name: Publish Blazor app
        run: dotnet publish BlazorApp1/BlazorApp1.csproj -c Release -o publish

      - name: Install Playwright CLI
        run: dotnet tool install --global Microsoft.Playwright.CLI

      - name: Install Playwright browsers
        run: playwright install

      - name: Install wait-on
        run: npm install -g wait-on

      - name: Run Blazor app from BlazorApp1 directory
        run: |
          cd BlazorApp1
          dotnet run --urls=http://127.0.0.1:5000 > ../blazor.log 2>&1 &

          # Wait for the app to start by probing the port
          $maxRetries = 12
          $delaySeconds = 5
          $url = "http://127.0.0.1:5000"

          for ($i = 0; $i -lt $maxRetries; $i++) {
            try {
              $res = Invoke-WebRequest -Uri $url -UseBasicParsing -TimeoutSec 3
              Write-Host "✅ Blazor app is responding on attempt $($i + 1)."
              break
            } catch {
              Write-Host "⏳ Attempt $($i + 1): App not ready..."
              Start-Sleep -Seconds $delaySeconds
            }
          }

          if ($i -eq $maxRetries) {
              Write-Host "::error::Blazor app did not start."
            type ../blazor.log
            exit 1
          }

          Write-Host "--- Blazor Startup Log ---"
          type ../blazor.log
        shell: pwsh

      - name: Wait for server to start
        run: Start-Sleep -Seconds 50
        shell: pwsh

      - name: Run Playwright Tests
        run: dotnet test
